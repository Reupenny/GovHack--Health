version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: openhealth
      POSTGRES_USER: openhealth_user
      POSTGRES_PASSWORD: openhealth_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openhealth_user -d openhealth"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  openhealth-api:
    build: .
    ports:
      - "8080:8080"  # Frontend (Cloud Run compatible)
      - "3000:3000"  # Central API (internal)
      - "3001:3001"  # DHB Service (internal) 
      - "3003:3003"  # Toniq Service (internal)
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://openhealth_user:openhealth_password@postgres:5432/openhealth
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=openhealth
      - DB_USER=openhealth_user
      - DB_PASSWORD=openhealth_password
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    
  # Service registration container - runs once to register providers
  register-services:
    image: curlimages/curl:latest
    depends_on:
      openhealth-api:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for services to be ready...' &&
        sleep 10 &&
        echo 'Registering DHB service...' &&
        curl -X POST http://openhealth-api:3000/register 
          -H 'Content-Type: application/json' 
          -d '{\"providerId\": \"dhb-auckland\", \"baseUrl\": \"http://localhost:3001/api/v1\"}' &&
        echo 'Registering Toniq service...' &&
        curl -X POST http://openhealth-api:3000/register 
          -H 'Content-Type: application/json' 
          -d '{\"providerId\": \"toniq-medications\", \"baseUrl\": \"http://localhost:3003/api/v1\"}' &&
        echo 'All services registered successfully!'
      "
    restart: "no"

volumes:
  postgres_data:

networks:
  default:
    name: openhealth-network